test_pod:
  image: bats/bats:v1.1.0
  pullPolicy: IfNotPresent

loki:
  enabled: true
  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 500m
      memory: 1024Mi
  nodeSelector:
    mgt: present
  isDefault: true
  url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  datasource:
    jsonData: {}
    uid: ""
  # Retention 설정
  config:
    chunk_store_config:
      max_look_back_period: 1m
    table_manager:
      retention_deletes_enabled: true
      retention_period: 24h
  persistence:
    enabled: true
    size: 30Gi
    storageClassName: kic-propose
    AccessModes:
    - ReadWriteOnce

promtail:
  enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi
  # nodeSelector:
  #   mgt: present
  #   ingress: present   
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
    snippets:
      scrapeConfigs: |
        # See also <https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet> for reference
        - job_name: kubernetes-pods
          pipeline_stages:
            {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_controller_name
              regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
              action: replace
              target_label: __tmp_controller_name
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_name
                - __meta_kubernetes_pod_label_app
                - __tmp_controller_name
                - __meta_kubernetes_pod_name
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: app
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                - __meta_kubernetes_pod_label_release
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: instance
            - source_labels:
                - __meta_kubernetes_pod_label_app_kubernetes_io_component
                - __meta_kubernetes_pod_label_component
              regex: ^;*([^;]+)(;.*)?$
              action: replace
              target_label: component
            {{- if .Values.config.snippets.addScrapeJobLabel }}
            - replacement: kubernetes-pods
              target_label: scrape_job
            {{- end }}
            {{- toYaml .Values.config.snippets.common | nindent 4 }}
            {{- with .Values.config.snippets.extraRelabelConfigs }}
            {{- toYaml . | nindent 4 }}
            {{- end }}
            # exclude logs
            - source_labels: [__meta_kubernetes_namespace]
              action: drop
              regex: kube-system|istio-system|elastic-system|loki
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: drop
              regex: metricbeat|filebeat|istio-proxy|istio-init

# Grafana
grafana:
  enabled: true
  sidecar:
    datasources:
      enabled: true
      maxLines: 1000
  image:
    tag: 10.2.3
  nodeSelector:
    mgt: present
  service:
    type: ClusterIP
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    path: /
    pathType: Prefix
    backend:
      service:
        name: glp-grafana
        port:
          number: 3000
    hosts:
      - dec-grafana.hyuns.link
  grafana.ini: 
    server:
      root_url: http://dec-grafana.hyuns.link
    log:
      mode: console
      level: debug
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    auth:
      oauth_allow_insecure_email_lookup = true
    auth.generic_oauth:
      name: Auth0
      icon: Auth0
      enabled: true
      allow_sign_up: true
      auto_login: false
      client_id: Zja0UGKBa3TcpyHoHL4MMteWLi1UlUrX
      client_secret: FqvWd0-gDJoY2m2KWAoRIgInFhwi0XCJDhud8TC5sRpDRvAedrhnm-AhPPijEwXT
      scopes: openid profile email offline_access
#      auth_url: https://trial-6121546.okta.com/oauth2/v1/authorize
      auth_url: https://dev-d7zldvkxfrwclbq4.us.auth0.com/authorize
#      token_url: https://trial-6121546.okta.com/oauth2/v1/token
      token_url: https://dev-d7zldvkxfrwclbq4.us.auth0.com/oauth/token
#      api_url: https://trial-6121546.okta.com/oauth2/v1/userinfo
      api_url: https://dev-d7zldvkxfrwclbq4.us.auth0.com/userinfo
      use_pkce: true
      use_refresh_token: true
      skip_org_role_sync: true
  dashboardProviders: 
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards: 
    default:
      Loki-logs:
        gnetId: 13639
        revision: 2
        datasource: Loki
# 비활성화
prometheus:
  enabled: false

fluent-bit:
  enabled: false

filebeat:
  enabled: false

logstash:
  enabled: false

proxy:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""